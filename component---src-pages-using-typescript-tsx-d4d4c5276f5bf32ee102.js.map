{"version":3,"file":"component---src-pages-using-typescript-tsx-d4d4c5276f5bf32ee102.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/using-typescript.tsx","webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport * as React from \"react\"\nimport { PageProps, Link, graphql, HeadFC } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({\n  data,\n  location,\n}) => (\n  <Layout>\n    <h1>\n      Gatsby supports <b>TypeScript by default</b>\n    </h1>\n    <p>\n      This means that you can create and write <code>.ts/.tsx</code> files for\n      your pages, components, and <code>gatsby-*</code> configuration files (for\n      example <code>gatsby-config.ts</code>).\n    </p>\n    <p>\n      For type checking you'll want to install <code>typescript</code> via npm\n      and run <code>tsc --init</code> to create a <code>tsconfig</code> file.\n    </p>\n    <p>\n      You're currently on the page <code>{location.pathname}</code> which was\n      built on {data.site.buildTime}.\n    </p>\n    <p>\n      To learn more, head over to our{\" \"}\n      <a href=\"https://www.gatsbyjs.com/docs/how-to/custom-configuration/typescript/\">\n        documentation about TypeScript\n      </a>\n      .\n    </p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport const Head: HeadFC<DataProps> = () => <Seo title=\"Using TypeScript\" />\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","import * as React from 'react'\n\nconst Header = () => {\n    return (\n        <header>\n            <title>VR Website</title>\n            <div className=\"row\">\n                <div className=\"collapse bg-dark\" id=\"navbarHeader\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-8 col-md-7 py-4\">\n                                <h4 className=\"text-white\">About</h4>\n                                <p className=\"text-muted\">Add some information about the album below, the author, or any other\n                                    background context. Make it a few sentences long so folks can pick up some informative tidbits.\n                                    Then, link them off to some social networking sites or contact information.</p>\n                            </div>\n                            <div className=\"col-sm-4 offset-md-1 py-4\">\n                                <h4 className=\"text-white\">Contact</h4>\n                                <ul className=\"list-unstyled\">\n                                    <li><a href=\"#\" className=\"text-white\">Follow on Twitter</a></li>\n                                    <li><a href=\"#\" className=\"text-white\">Like on Facebook</a></li>\n                                    <li><a href=\"#\" className=\"text-white\">Email me</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"navbar navbar-dark bg-dark box-shadow\">\n                    <div className=\"container d-flex justify-content-between\">\n                        <a href=\"#\" className=\"navbar-brand d-flex align-items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\n                                stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\">\n                                <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\n                                <circle cx=\"12\" cy=\"13\" r=\"4\"></circle>\n                            </svg>\n                            <strong>VR360</strong>\n                        </a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarHeader\"\n                            aria-controls=\"navbarHeader\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            \n        </header>\n    );\n};\nexport default Header;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n"],"names":["Head","React","Seo","title","_ref","data","location","Layout","pathname","site","buildTime","href","Link","to","className","id","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","type","children","useStaticQuery","siteTitle","siteMetadata","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","name","content","property","author"],"sourceRoot":""}