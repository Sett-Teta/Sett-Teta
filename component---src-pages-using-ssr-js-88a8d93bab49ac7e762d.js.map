{"version":3,"file":"component---src-pages-using-ssr-js-88a8d93bab49ac7e762d.js","mappings":"mJAgDA,IA9Ce,IAEP,8BACI,6BAAO,cACP,uBAAKA,UAAU,OACX,uBAAKA,UAAU,mBAAmBC,GAAG,gBACjC,uBAAKD,UAAU,aACX,uBAAKA,UAAU,OACX,uBAAKA,UAAU,0BACX,sBAAIA,UAAU,cAAa,SAC3B,qBAAGA,UAAU,cAAa,qPAI9B,uBAAKA,UAAU,6BACX,sBAAIA,UAAU,cAAa,WAC3B,sBAAIA,UAAU,iBACV,0BAAI,qBAAGE,KAAK,IAAIF,UAAU,cAAa,sBACvC,0BAAI,qBAAGE,KAAK,IAAIF,UAAU,cAAa,qBACvC,0BAAI,qBAAGE,KAAK,IAAIF,UAAU,cAAa,kBAM3D,uBAAKA,UAAU,yCACX,uBAAKA,UAAU,4CACX,qBAAGE,KAAK,IAAIF,UAAU,0CAClB,uBAAKG,MAAM,6BAA6BC,MAAM,KAAKC,OAAO,KAAKC,QAAQ,YAAYC,KAAK,OACpFC,OAAO,eAAeC,YAAY,IAAIC,cAAc,QAAQC,eAAe,QAAQX,UAAU,QAC7F,wBAAMY,EAAE,sFACR,0BAAQC,GAAG,KAAKC,GAAG,KAAKC,EAAE,OAE9B,8BAAQ,UAEZ,0BAAQf,UAAU,iBAAiBgB,KAAK,SAAS,cAAY,WAAW,cAAY,gBAChF,gBAAc,eAAe,gBAAc,QAAQ,aAAW,qBAC9D,wBAAMhB,UAAU,4B,yDCW5C,IArCe,IAAmB,IAAD,MAAjB,SAAEiB,GAAU,EAC1B,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,cAU5B,OACE,gCACE,gBAAC,IAAM,CAACC,WAAiC,QAAtB,EAAAF,EAAKG,KAAKC,oBAAY,aAAtB,EAAwBC,QAAK,UAChD,uBACEC,MAAO,CACLC,OAAO,SACPC,SAAS,sBACTC,QAAQ,uBAGV,4BAAOV,GACP,0BACEO,MAAO,CACLI,UAAU,iBACVC,SAAS,mBAEZ,MACI,IAAIC,MAAOC,cAAc,gBAC5B,IACA,qBAAG7B,KAAK,4BAA2B,YAGtC,C,+CCFP,IAlCA,SAAa,GAAmC,IAAD,QAAlC,YAAE8B,EAAW,MAAET,EAAK,SAAEN,GAAU,EAC3C,MAAM,KAAEI,IAASF,EAAAA,EAAAA,gBAAe,YAc1Bc,EAAkBD,GAAeX,EAAKC,aAAaU,YACnDE,EAAgC,QAApB,EAAGb,EAAKC,oBAAY,aAAjB,EAAmBC,MAExC,OACE,gCACE,6BAAQW,EAAkBX,EAAK,MAAMW,EAAiBX,GACtD,wBAAMY,KAAK,cAAcC,QAASH,IAClC,wBAAMI,SAAS,WAAWD,QAASb,IACnC,wBAAMc,SAAS,iBAAiBD,QAASH,IACzC,wBAAMI,SAAS,UAAUD,QAAQ,YACjC,wBAAMD,KAAK,eAAeC,QAAQ,YAClC,wBAAMD,KAAK,kBAAkBC,SAA0B,QAAjB,EAAAf,EAAKC,oBAAY,aAAjB,EAAmBgB,SAAM,KAC/D,wBAAMH,KAAK,gBAAgBC,QAASb,IACpC,wBAAMY,KAAK,sBAAsBC,QAASH,IACzChB,EAGP,C,6GCpCA,MA4BasB,EAAO,IAAM,gBAAC,IAAG,CAAChB,MAAM,cAErC,UA9BiB,IAAqB,IAApB,WAAEiB,GAAY,EAC9B,OACE,gBAAC,IAAM,KACL,0BAAI,gBACW,yBAAG,yBAElB,yBAAG,mHAE4C,IAC7C,4BAAM,yCAA4C,KAEpD,uBACEhB,MAAO,CAAEpB,MAAO,QAASqC,aAAc,wBACvCC,IAAI,eACJC,IAAKH,EAAWI,UAElB,yBAAG,kCAC+B,IAChC,qBAAG1C,KAAK,oFAAmF,6CAEvF,KAGN,gBAAC,EAAA2C,KAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/components/header.js","webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import * as React from 'react'\n\nconst Header = () => {\n    return (\n        <header>\n            <title>VR Website</title>\n            <div className=\"row\">\n                <div className=\"collapse bg-dark\" id=\"navbarHeader\">\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col-sm-8 col-md-7 py-4\">\n                                <h4 className=\"text-white\">About</h4>\n                                <p className=\"text-muted\">Add some information about the album below, the author, or any other\n                                    background context. Make it a few sentences long so folks can pick up some informative tidbits.\n                                    Then, link them off to some social networking sites or contact information.</p>\n                            </div>\n                            <div className=\"col-sm-4 offset-md-1 py-4\">\n                                <h4 className=\"text-white\">Contact</h4>\n                                <ul className=\"list-unstyled\">\n                                    <li><a href=\"#\" className=\"text-white\">Follow on Twitter</a></li>\n                                    <li><a href=\"#\" className=\"text-white\">Like on Facebook</a></li>\n                                    <li><a href=\"#\" className=\"text-white\">Email me</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"navbar navbar-dark bg-dark box-shadow\">\n                    <div className=\"container d-flex justify-content-between\">\n                        <a href=\"#\" className=\"navbar-brand d-flex align-items-center\">\n                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"20\" height=\"20\" viewBox=\"0 0 24 24\" fill=\"none\"\n                                stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" className=\"mr-2\">\n                                <path d=\"M23 19a2 2 0 0 1-2 2H3a2 2 0 0 1-2-2V8a2 2 0 0 1 2-2h4l2-3h6l2 3h4a2 2 0 0 1 2 2z\"></path>\n                                <circle cx=\"12\" cy=\"13\" r=\"4\"></circle>\n                            </svg>\n                            <strong>VR360</strong>\n                        </a>\n                        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarHeader\"\n                            aria-controls=\"navbarHeader\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                            <span className=\"navbar-toggler-icon\"></span>\n                        </button>\n                    </div>\n                </div>\n            </div>\n            \n        </header>\n    );\n};\nexport default Header;","/**\n * Layout component that queries for data\n * with Gatsby's useStaticQuery component\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nimport Header from \"./header\"\nimport \"./layout.css\"\n\nconst Layout = ({ children }) => {\n  const data = useStaticQuery(graphql`\n    query SiteTitleQuery {\n      site {\n        siteMetadata {\n          title\n        }\n      }\n    }\n  `)\n\n  return (\n    <>\n      <Header siteTitle={data.site.siteMetadata?.title || `Title`} />\n      <div\n        style={{\n          margin: `0 auto`,\n          maxWidth: `var(--size-content)`,\n          padding: `var(--size-gutter)`,\n        }}\n      >\n        <main>{children}</main>\n        <footer\n          style={{\n            marginTop: `var(--space-5)`,\n            fontSize: `var(--font-sm)`,\n          }}\n        >\n          Â© {new Date().getFullYear()} &middot; Built with\n          {` `}\n          <a href=\"https://www.gatsbyjs.com\">Gatsby</a>\n        </footer>\n      </div>\n    </>\n  )\n}\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["className","id","href","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","cx","cy","r","type","children","data","useStaticQuery","siteTitle","site","siteMetadata","title","style","margin","maxWidth","padding","marginTop","fontSize","Date","getFullYear","description","metaDescription","defaultTitle","name","content","property","author","Head","serverData","borderRadius","alt","src","message","Link","to"],"sourceRoot":""}